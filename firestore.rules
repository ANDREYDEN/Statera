rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /groups/{groupId} {
      // only authorize members to read group data
    	allow read: if isGroupMember();
      
      // authorize any authenticated user to create groups
    	allow create: if request.auth != null;
      
      // only authorize members to update certain group fields
    	allow update: if isGroupMember() && fieldsChanged(['balance']);

      // only authorize admins to change group settings
    	allow update: if isGroupAdmin() && fieldsChanged(['name', 'currencySign', 'inviteLink', 'adminId', 'debtThreshold']);
    }

    function isGroupAdmin() {
      return request.auth.uid == resource.data.adminId 
        || request.auth.uid == resource.data.memberIds[0];
    }

    function isGroupMember() {
      return request.auth.uid in resource.data.memberIds;
    }

    match /expenses/{expenseId} {
      allow read, write: if request.auth != null;
    }

    match /payments/{paymentId} {
      allow read, write: if request.auth != null;
    }

    match /users/{userId} {
      allow read, write: if request.auth != null;
    }

    function fieldsChanged(fields) {
      return debug(request.resource.data.diff(resource.data).affectedKeys()).hasOnly(fields);
    }
  }
}