name: Build artifacts and create draft release

on:
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  FLUTTER_VERSION: 3.32.8
  JAVA_VERSION: 20

jobs:
  web-build-artifact:
    name: Build Web Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
          cache: "gradle"

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Get dependencies
        run: flutter pub get

      - name: Build project
        run: flutter build web

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-out
          path: build/web

  android-build-artifact:
    name: Build Android Artifact
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: ${{ env.JAVA_VERSION }}
          cache: "gradle"

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Get dependencies
        run: flutter pub get

      - name: Copy google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > android/app/google-services.json

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - name: Build App bundle
        run: flutter build appbundle

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-out
          path: build/app/outputs/bundle/release/app-release.aab

  ios-build-artifact:
    name: Build iOS Artifact
    runs-on: macos-15
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-v1"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Copy GoogleService-Info.plist
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_IOS }}
        run: echo $FIREBASE_CONFIG_IOS > ios/Runner/GoogleService-Info.plist

      - name: Install Ruby Gems
        working-directory: ios
        run: bundle install

      - name: Install Certificates and Provisioning Profiles
        env:
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
        working-directory: ios
        run: bundle exec fastlane match appstore --readonly

      - name: Build ipa
        run: flutter build ipa --export-options-plist ./ios/Runner/Export.plist

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-out
          path: build/ios/ipa/statera.ipa

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs:
      - web-build-artifact
      - android-build-artifact
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download All Artifacts
        uses: actions/download-artifact@v4

      - run: ls -R

      - name: Zip Web Artifact
        run: |
          cd web-out
          zip -r ../web.zip .
          cd ..

      - name: Rename Android Artifact
        run: mv android-out/app-release.aab ./android.aab

      - name: Rename iOS Artifact
        run: mv ios-out/statera.ipa ./ios.ipa

      - name: Read Version
        id: read-version
        uses: jbutcher5/read-yaml@1.6
        with:
          file: pubspec.yaml
          key-path: '["version"]'

      - name: Create Draft Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.read-version.outputs.data }}_${{ github.run_number }}
          name: Release ${{ steps.read-version.outputs.data }}
          body: |
            ## Release Notes

            <Please provide release notes here>

            Android App: https://play.google.com/store/apps/details?id=com.statera.statera&pli=1
            iOS App: https://apps.apple.com/us/app/statera/id1609503817?platform=iphone
            Web App: https://statera-0.web.app/
          draft: true
          files: |
            web.zip
            android.aab
            ios.ipa
