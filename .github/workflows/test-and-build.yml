name: Test and build

on:
  pull_request:
    branches: [main]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  test_flutter:
    name: Run Flutter tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: "14.x"

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Get dependencies
        run: flutter pub get

      - name: Install derry
        run: flutter pub global activate derry

      - name: Generate mocks
        run: derry create-mocks

      - name: Run tests
        run: flutter test

  build_and_test_functions:
    name: Run tests and build Firebase Functions
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: functions
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install dependencies
        run: npm i

      - name: Run linter
        run: npm run lint

      - name: Run functions tests
        run: npm test

  build_android:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: "14.x"

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Get dependencies
        run: flutter pub get

      - name: Copy google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > android/app/google-services.json

      - name: Configure Keystore
        run: |
          echo "$PLAY_STORE_UPLOAD_KEY" | base64 --decode > app/upload-keystore.jks
          echo "storeFile=upload-keystore.jks" >> key.properties
          echo "keyAlias=$KEYSTORE_KEY_ALIAS" >> key.properties
          echo "storePassword=$KEYSTORE_STORE_PASSWORD" >> key.properties
          echo "keyPassword=$KEYSTORE_KEY_PASSWORD" >> key.properties
        env:
          PLAY_STORE_UPLOAD_KEY: ${{ secrets.PLAY_STORE_UPLOAD_KEY }}
          KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
          KEYSTORE_STORE_PASSWORD: ${{ secrets.KEYSTORE_STORE_PASSWORD }}
        working-directory: android

      - name: Build App bundle
        run: flutter build appbundle

  build_web:
    name: Build Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Download Java
        uses: actions/setup-java@v3
        with:
          distribution: oracle
          java-version: "14.x"

      - name: Download Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"
          cache: true
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:"

      - name: Copy .env
        env:
          DOT_ENV: ${{ secrets.DOT_ENV }}
        run: echo $DOT_ENV > .env

      - name: Copy google-services.json
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
        run: echo $FIREBASE_CONFIG > android/app/google-services.json

      - name: Get dependencies
        run: flutter pub get

      - name: Build Web app
        run: flutter build web
