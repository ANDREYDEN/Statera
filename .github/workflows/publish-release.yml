name: Publish release

on:
  release:
    types: [published, released]

jobs:
  play-store-publish:
    name: Publish Play Store Release
    if: github.event.release.prerelease == true
    environment: android-production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: android.aab

      - name: Create fastlane-service-account.json
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        run: echo $PLAY_STORE_CONFIG_JSON > fastlane-service-account.json
        working-directory: android

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0.2"
          bundler-cache: true
          working-directory: android

      - name: Create Draft Play Store Release
        run: >
          bundle exec fastlane run upload_to_play_store
          aab:../android.aab
          release_status:draft
        working-directory: android

  testflight-publish:
    name: Publish TestFlight Release
    if: github.event.release.prerelease == true
    environment: ios-production
    runs-on: macos-15
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: ios.ipa

      - name: Install Ruby Gems
        working-directory: ios
        run: bundle install

      - name: Upload to TestFlight
        env:
          APP_STORE_API_KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }}
          APP_STORE_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_API_KEY_ISSUER_ID }}
          APP_STORE_API_KEY_BASE_64: ${{ secrets.APP_STORE_API_KEY_BASE_64 }}
          APP_STORE_CONNECT_APPLE_ID: ${{ secrets.APP_STORE_CONNECT_APPLE_ID }}
        working-directory: ios
        run: >
          bundle exec fastlane run upload_to_testflight
          path:../ios.ipa

  web-publish:
    name: Publish Web Release
    if: github.event.release.prerelease == false
    environment: web-production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: web.zip

      - name: Unzip Artifact
        run: mkdir -p build/web && unzip web.zip -d build/web

      - name: Deploy to Firebase hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_STATERA_0 }}"
          projectId: statera-0
          channelId: live

  app-distribution-android-publish:
    name: Publish Android Release to Firebase App Distribution
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: android.aab

      - name: Create fastlane-service-account.json
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        run: echo $PLAY_STORE_CONFIG_JSON > fastlane-service-account.json
        working-directory: android

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0.2"
          bundler-cache: true
          working-directory: android

      - name: Create App Distribution Release
        run: >
          sudo fastlane run firebase_app_distribution
          app:${{ secrets.FIREBASE_ANDROID_APP_ID }}
          android_artifact_type:AAB
          android_artifact_path:/home/runner/work/Statera/Statera/android.aab
          groups:friends
          debug:true
        working-directory: android

  app-distribution-ios-publish:
    name: Publish iOS Release to Firebase App Distribution
    if: github.event.release.prerelease == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Artifact from Release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: ${{ github.event.release.id }}
          file: ios.ipa

      - name: Create fastlane-service-account.json
        env:
          PLAY_STORE_CONFIG_JSON: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
        run: echo $PLAY_STORE_CONFIG_JSON > fastlane-service-account.json
        working-directory: ios

      - name: Copy GoogleService-Info.plist
        env:
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG_IOS }}
        run: echo $FIREBASE_CONFIG_IOS > ios/Runner/GoogleService-Info.plist

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0.2"
          bundler-cache: true
          working-directory: android

      - name: Create App Distribution Release
        run: >
          bundle exec fastlane run firebase_app_distribution
          app:${{ secrets.FIREBASE_IOS_APP_ID }}
          ipa_path:/home/runner/work/Statera/Statera/ios.ipa
          groups:friends
          debug:true
        working-directory: android
